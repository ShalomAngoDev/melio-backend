#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');

console.log('üîç V√©rification des pr√©requis pour le d√©veloppement local...\n');

let allGood = true;

// V√©rifier Node.js
console.log('üì¶ Node.js...');
try {
  const nodeVersion = execSync('node --version', { encoding: 'utf8' }).trim();
  const version = parseInt(nodeVersion.replace('v', '').split('.')[0]);
  if (version >= 18) {
    console.log(`   ‚úÖ ${nodeVersion} (OK)`);
  } else {
    console.log(`   ‚ùå ${nodeVersion} (N√©cessite v18+)`);
    allGood = false;
  }
} catch (error) {
  console.log('   ‚ùå Node.js non install√©');
  allGood = false;
}

// V√©rifier npm
console.log('üì¶ npm...');
try {
  const npmVersion = execSync('npm --version', { encoding: 'utf8' }).trim();
  console.log(`   ‚úÖ ${npmVersion}`);
} catch (error) {
  console.log('   ‚ùå npm non install√©');
  allGood = false;
}

// V√©rifier PostgreSQL
console.log('üêò PostgreSQL...');
try {
  const pgVersion = execSync('psql --version', { encoding: 'utf8' }).trim();
  console.log(`   ‚úÖ ${pgVersion}`);
  
  // Tester la connexion
  try {
    execSync('psql -U postgres -c "SELECT 1;"', { stdio: 'pipe' });
    console.log('   ‚úÖ Connexion PostgreSQL OK');
  } catch (error) {
    console.log('   ‚ö†Ô∏è  PostgreSQL install√© mais connexion impossible');
    console.log('      V√©rifiez que PostgreSQL est d√©marr√© et accessible');
  }
} catch (error) {
  console.log('   ‚ùå PostgreSQL non install√©');
  allGood = false;
}

// V√©rifier Redis
console.log('üî¥ Redis...');
try {
  const redisVersion = execSync('redis-server --version', { encoding: 'utf8' }).trim();
  console.log(`   ‚úÖ ${redisVersion}`);
  
  // Tester la connexion
  try {
    const ping = execSync('redis-cli ping', { encoding: 'utf8' }).trim();
    if (ping === 'PONG') {
      console.log('   ‚úÖ Connexion Redis OK');
    } else {
      console.log('   ‚ö†Ô∏è  Redis install√© mais non accessible');
    }
  } catch (error) {
    console.log('   ‚ö†Ô∏è  Redis install√© mais non d√©marr√©');
    console.log('      D√©marrez Redis avec: brew services start redis');
  }
} catch (error) {
  console.log('   ‚ùå Redis non install√©');
  allGood = false;
}

// V√©rifier le fichier .env
console.log('‚öôÔ∏è  Configuration...');
if (fs.existsSync('.env')) {
  console.log('   ‚úÖ Fichier .env pr√©sent');
} else {
  console.log('   ‚ö†Ô∏è  Fichier .env manquant');
  console.log('      Ex√©cutez: npm run setup');
}

// V√©rifier les d√©pendances
console.log('üìö D√©pendances...');
if (fs.existsSync('node_modules')) {
  console.log('   ‚úÖ node_modules pr√©sent');
} else {
  console.log('   ‚ö†Ô∏è  D√©pendances non install√©es');
  console.log('      Ex√©cutez: npm install');
  allGood = false;
}

// R√©sum√©
console.log('\nüìã R√©sum√©:');
if (allGood) {
  console.log('üéâ Tous les pr√©requis sont satisfaits !');
  console.log('\nüöÄ Vous pouvez maintenant lancer:');
  console.log('   npm run dev     - D√©veloppement');
  console.log('   npm run prod    - Production locale');
} else {
  console.log('‚ö†Ô∏è  Certains pr√©requis manquent.');
  console.log('\nüìñ Consultez LOCAL-DEVELOPMENT.md pour les instructions d\'installation.');
  process.exit(1);
}
