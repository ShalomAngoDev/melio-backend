const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function fixChatTable() {
  try {
    console.log('üîß Correction de la table chat_messages...');
    
    // V√©rifier si la colonne content existe
    const contentExists = await prisma.$queryRaw`
      SELECT 1 FROM information_schema.columns
      WHERE table_name = 'chat_messages' AND column_name = 'content'
    `;
    
    if (!contentExists.length) {
      console.log('üìù Ajout de la colonne content...');
      await prisma.$executeRawUnsafe(`ALTER TABLE "chat_messages" ADD COLUMN "content" TEXT`);
      
      // Migrer les donn√©es de message vers content
      console.log('üîÑ Migration des donn√©es message -> content...');
      await prisma.$executeRawUnsafe(`UPDATE "chat_messages" SET "content" = "message" WHERE "message" IS NOT NULL`);
      
      // Rendre content NOT NULL
      await prisma.$executeRawUnsafe(`ALTER TABLE "chat_messages" ALTER COLUMN "content" SET NOT NULL`);
      
      // Supprimer l'ancienne colonne message
      console.log('üóëÔ∏è Suppression de l\'ancienne colonne message...');
      await prisma.$executeRawUnsafe(`ALTER TABLE "chat_messages" DROP COLUMN "message"`);
      
      console.log('‚úÖ Colonne content ajout√©e et donn√©es migr√©es');
    } else {
      console.log('‚úÖ Colonne content d√©j√† pr√©sente');
    }
    
    // V√©rifier si la colonne resourceId existe
    const resourceIdExists = await prisma.$queryRaw`
      SELECT 1 FROM information_schema.columns
      WHERE table_name = 'chat_messages' AND column_name = 'resourceId'
    `;
    
    if (!resourceIdExists.length) {
      console.log('üìù Ajout de la colonne resourceId...');
      await prisma.$executeRawUnsafe(`ALTER TABLE "chat_messages" ADD COLUMN "resourceId" TEXT`);
      console.log('‚úÖ Colonne resourceId ajout√©e');
    } else {
      console.log('‚úÖ Colonne resourceId d√©j√† pr√©sente');
    }
    
    console.log('üéâ Table chat_messages corrig√©e avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la correction:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter si appel√© directement
if (require.main === module) {
  fixChatTable()
    .then(() => {
      console.log('‚úÖ Correction termin√©e');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erreur:', error);
      process.exit(1);
    });
}

module.exports = { fixChatTable };
