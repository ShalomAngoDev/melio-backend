const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function cleanDatabase() {
  try {
    console.log('üßπ Nettoyage de la base de donn√©es...');
    
    // Ordre de suppression (respecter les contraintes de cl√©s √©trang√®res)
    console.log('üóëÔ∏è Suppression des messages de chat...');
    await prisma.$executeRaw`DELETE FROM "chat_messages"`;
    
    console.log('üóëÔ∏è Suppression des entr√©es de journal...');
    await prisma.$executeRaw`DELETE FROM "journal_entries"`;
    
    console.log('üóëÔ∏è Suppression des alertes...');
    await prisma.$executeRaw`DELETE FROM "alerts"`;
    
    console.log('üóëÔ∏è Suppression des signalements...');
    await prisma.$executeRaw`DELETE FROM "reports"`;
    
    console.log('üóëÔ∏è Suppression des √©l√®ves...');
    await prisma.$executeRaw`DELETE FROM "students"`;
    
    console.log('üóëÔ∏è Suppression des agents...');
    await prisma.$executeRaw`DELETE FROM "agent_users"`;
    
    console.log('üóëÔ∏è Suppression des √©coles...');
    await prisma.$executeRaw`DELETE FROM "schools"`;
    
    console.log('üóëÔ∏è Suppression des admins...');
    await prisma.$executeRaw`DELETE FROM "admin_users"`;
    
    console.log('‚úÖ Base de donn√©es nettoy√©e avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du nettoyage:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter si appel√© directement
if (require.main === module) {
  cleanDatabase()
    .then(() => {
      console.log('‚úÖ Nettoyage termin√©');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Erreur:', error);
      process.exit(1);
    });
}

module.exports = { cleanDatabase };


