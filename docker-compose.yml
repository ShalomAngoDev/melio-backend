services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: melio-postgres
    environment:
      POSTGRES_DB: melio_db
      POSTGRES_USER: melio
      POSTGRES_PASSWORD: melio123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - melio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U melio -d melio_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: melio-redis
    command: redis-server --appendonly yes --requirepass melio123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - melio-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # MinIO S3-compatible Storage
  minio:
    image: minio/minio:latest
    container_name: melio-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: melio
      MINIO_ROOT_PASSWORD: melio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - melio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # AI Provider Mock (Development)
  ai-provider:
    image: python:3.11-slim
    container_name: melio-ai-provider
    working_dir: /app
    volumes:
      - ./ai-mock-server.py:/app/main.py
    command: sh -c "pip install fastapi uvicorn pydantic && python main.py"
    ports:
      - "8000:8000"
    networks:
      - melio-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  melio-network:
    driver: bridge
