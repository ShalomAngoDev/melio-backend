import { Injectable, Logger } from '@nestjs/common';

export interface ChatResponse {
  content: string;
  resourceId?: string;
  category?: string; // Cat√©gorie d√©tect√©e pour le fallback
}

@Injectable()
export class ChatAIService {
  private readonly logger = new Logger(ChatAIService.name);

  // Mots-cl√©s pour d√©tecter les √©motions et situations
  private readonly emotionKeywords = {
    fear: [
      'peur',
      'peur',
      'effray√©',
      'effray√©e',
      'terrifi√©',
      'terrifi√©e',
      'anxi√©t√©',
      'anxieux',
      'anxieuse',
      'stress',
      'stress√©',
      'stress√©e',
    ],
    sadness: [
      'triste',
      'tristesse',
      'pleurer',
      'pleure',
      'd√©prim√©',
      'd√©prim√©e',
      'malheureux',
      'malheureuse',
      'd√©sesp√©r√©',
      'd√©sesp√©r√©e',
    ],
    anger: [
      'col√®re',
      '√©nerv√©',
      '√©nerv√©e',
      'f√¢ch√©',
      'f√¢ch√©e',
      'rage',
      'frustr√©',
      'frustr√©e',
      'furieux',
      'furieuse',
    ],
    loneliness: [
      'seul',
      'seule',
      'isolement',
      'isol√©',
      'isol√©e',
      'personne',
      'ami',
      'amie',
      'copain',
      'copine',
    ],
    bullying: [
      'moquer',
      'moqueries',
      'insulte',
      'insultes',
      'harc√®lement',
      'harceler',
      'emb√™ter',
      'emb√™t√©',
      'emb√™t√©e',
      'taquiner',
      'taquine',
    ],
    violence: [
      'frapper',
      'frapper',
      'battre',
      'battu',
      'battue',
      'violence',
      'violent',
      'violente',
      'agression',
      'agresser',
    ],
    school: [
      '√©cole',
      'classe',
      'professeur',
      'prof',
      'cours',
      'devoir',
      'devoirs',
      'examen',
      'examens',
      'notes',
      'harcel√©',
      'harceler',
      'harc√®lement',
    ],
    family: ['parents', 'maman', 'papa', 'famille', 'maison', 'maison'],
  };

  // R√©ponses empathiques par cat√©gorie
  private readonly responses = {
    fear: [
      "Je comprends que tu aies peur üíú Tu n'es pas seul¬∑e, je suis l√† avec toi.",
      "C'est normal d'avoir peur parfois üå∏ Veux-tu que je te montre un petit exercice pour te rassurer ?",
      "Je suis l√† pour t'aider √† te sentir mieux üíï Tu veux qu'on en parle ?",
    ],
    sadness: [
      "Je vois que tu es triste üíî C'est dur, mais tu n'es pas seul¬∑e.",
      "Je suis l√† pour t'√©couter üíú Veux-tu me raconter ce qui te rend triste ?",
      "Parfois on a besoin de pleurer, c'est normal üå∏ Je reste avec toi.",
    ],
    anger: [
      "Je sens que tu es en col√®re üò§ C'est normal d'√™tre √©nerv√©¬∑e parfois.",
      "La col√®re, c'est une √©motion normale üí™ Veux-tu qu'on trouve une fa√ßon de la g√©rer ?",
      'Je comprends ta col√®re üíú Parler peut aider √† se sentir mieux.',
    ],
    loneliness: [
      "Tu n'es pas seul¬∑e üíï Je suis l√† pour toi.",
      "C'est dur de se sentir seul¬∑e üíú Veux-tu que je te montre comment d'autres enfants se sont fait des amis ?",
      'Je reste avec toi üå∏ On peut parler si tu veux.',
    ],
    bullying: [
      "Personne ne devrait te faire du mal üíî Tu veux que je te montre comment d'autres enfants ont r√©ussi √† s'en sortir ?",
      "C'est courageux de m'en parler üí™ Tu n'es pas seul¬∑e face √† √ßa.",
      "Personne n'a le droit de te faire du mal üíú Je peux t'aider √† trouver des solutions.",
    ],
    violence: [
      "C'est tr√®s grave ce qui t'arrive üö® Tu veux que je te montre comment te prot√©ger ?",
      'Personne ne doit te faire mal üíî Il faut en parler √† un adulte de confiance.',
      "C'est courageux de m'en parler üí™ Je vais t'aider √† trouver de l'aide.",
    ],
    school: [
      "L'√©cole peut √™tre difficile parfois üìö Veux-tu qu'on trouve des solutions ensemble ?",
      "Je comprends que l'√©cole te pose des probl√®mes üíú On peut en parler.",
      "L'√©cole, c'est important mais parfois compliqu√© üå∏ Comment puis-je t'aider ?",
    ],
    family: [
      "La famille, c'est parfois compliqu√© üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Veux-tu qu'on en parle ?",
      "Je comprends que ce soit difficile √† la maison üíú Je suis l√† pour t'√©couter.",
      'Parler de la famille peut aider üå∏ Veux-tu me raconter ?',
    ],
    general: [
      "Je suis l√† pour t'√©couter üíú Raconte-moi ce qui se passe.",
      "Comment puis-je t'aider aujourd'hui ? üå∏",
      'Je suis content¬∑e que tu viennes me parler üíï',
      'Tu peux me dire tout ce qui te pr√©occupe üíú',
      'Je reste avec toi üå∏ Parle-moi si tu veux.',
    ],
    encouragement: [
      'Tu es courageux¬∑se üí™',
      'Je crois en toi üíï',
      'Tu es plus fort¬∑e que tu ne le penses üåü',
      "Tu n'es pas seul¬∑e üíú",
      'Je suis fier¬∑e de toi üå∏',
    ],
    resources: [
      'Veux-tu que je te montre un petit conseil ? üí°',
      "Je peux te montrer comment d'autres enfants s'en sont sortis üìö",
      "Veux-tu voir un exercice qui peut t'aider ? üåü",
      "Je connais des trucs qui peuvent t'aider üí™",
      'Veux-tu que je te montre une ressource utile ? üìñ',
    ],
  };

  // Ressources par cat√©gorie (TOUS les IDs sont r√©els de la base de donn√©es)
  private readonly resources = {
    fear: 'cmgb6s2tv00075h3p2wnewbk4', // Techniques de relaxation
    sadness: 'cmgb6s2u7000b5h3p6pu35x7w', // Reconna√Ætre les signes de d√©pression
    anger: 'cmgb6s2tv00075h3p2wnewbk4', // Techniques de relaxation
    loneliness: 'cmgb6s2u7000b5h3p6pu35x7w', // Reconna√Ætre les signes de d√©pression
    bullying: 'cmgb6s2sv00015h3pge3bwnb8', // Comment j'ai surmont√© le harc√®lement
    violence: 'cmgb6s2sv00015h3pge3bwnb8', // Comment j'ai surmont√© le harc√®lement
    school: 'cmgb6s2sv00015h3pge3bwnb8', // Comment j'ai surmont√© le harc√®lement
    family: 'cmgb6s2u7000b5h3p6pu35x7w', // Reconna√Ætre les signes de d√©pression
    general: 'cmgb6s2u7000b5h3p6pu35x7w', // Reconna√Ætre les signes de d√©pression
  };

  /**
   * Analyse le message de l'√©l√®ve et g√©n√®re une r√©ponse appropri√©e
   */
  analyzeAndRespond(userMessage: string): ChatResponse {
    const lowerMessage = userMessage.toLowerCase();

    // D√©tecter les cat√©gories d'√©motions/situations
    const detectedCategories = this.detectCategories(lowerMessage);

    // S√©lectionner la cat√©gorie principale
    const mainCategory = this.selectMainCategory(detectedCategories);

    // G√©n√©rer la r√©ponse
    const response = this.generateResponse(mainCategory, lowerMessage);

    this.logger.log(
      `Chat AI - Cat√©gorie d√©tect√©e: ${mainCategory}, Message: "${userMessage.substring(0, 50)}..."`,
    );

    return response;
  }

  /**
   * D√©tecte les cat√©gories d'√©motions dans le message
   */
  private detectCategories(message: string): string[] {
    const categories: string[] = [];

    for (const [category, keywords] of Object.entries(this.emotionKeywords)) {
      if (keywords.some((keyword) => message.includes(keyword))) {
        categories.push(category);
      }
    }

    return categories;
  }

  /**
   * S√©lectionne la cat√©gorie principale (priorit√© aux situations graves)
   */
  private selectMainCategory(categories: string[]): string {
    if (categories.length === 0) return 'general';

    // Priorit√© aux situations graves
    const priority = [
      'violence',
      'bullying',
      'fear',
      'sadness',
      'anger',
      'loneliness',
      'school',
      'family',
    ];

    for (const priorityCategory of priority) {
      if (categories.includes(priorityCategory)) {
        return priorityCategory;
      }
    }

    return categories[0];
  }

  /**
   * G√©n√®re une r√©ponse adapt√©e √† la cat√©gorie
   */
  private generateResponse(category: string, message: string): ChatResponse {
    const categoryResponses = this.responses[category] || this.responses.general;
    const response = categoryResponses[Math.floor(Math.random() * categoryResponses.length)];

    // Ajouter une ressource si appropri√©
    const shouldAddResource = this.shouldAddResource(category, message);
    const resourceId = shouldAddResource ? this.resources[category] : undefined;

    // Parfois ajouter un message d'encouragement
    const shouldAddEncouragement = Math.random() < 0.3; // 30% de chance
    const encouragement = shouldAddEncouragement
      ? this.responses.encouragement[
          Math.floor(Math.random() * this.responses.encouragement.length)
        ]
      : '';

    // Construire la r√©ponse finale
    let finalResponse = response;
    if (encouragement) {
      finalResponse += ` ${encouragement}`;
    }

    // Ajouter une suggestion de ressource si pas d√©j√† incluse
    if (resourceId && !finalResponse.includes('montrer')) {
      const resourceSuggestion =
        this.responses.resources[Math.floor(Math.random() * this.responses.resources.length)];
      finalResponse += ` ${resourceSuggestion}`;
    }

    return {
      content: finalResponse,
      resourceId: resourceId,
      category: category, // Inclure la cat√©gorie pour le fallback
    };
  }

  /**
   * D√©termine si une ressource doit √™tre ajout√©e
   */
  private shouldAddResource(category: string, _message: string): boolean {
    // Toujours ajouter une ressource pour les situations graves
    if (['violence', 'bullying'].includes(category)) {
      return true;
    }

    // 70% de chance pour les autres cat√©gories
    if (['fear', 'sadness', 'anger', 'loneliness', 'school', 'family'].includes(category)) {
      return Math.random() < 0.7;
    }

    // 30% de chance pour les messages g√©n√©raux
    return Math.random() < 0.3;
  }

  /**
   * V√©rifie si le message est hors sujet ou inappropri√©
   */
  isOffTopic(message: string): boolean {
    const lowerMessage = message.toLowerCase();

    // Mots-cl√©s hors sujet
    const offTopicKeywords = [
      'politique',
      '√©lection',
      'vote',
      'gouvernement',
      'sexe',
      'sexuel',
      'sexuelle',
      'adultes',
      'drogue',
      'alcool',
      'cigarette',
      'argent',
      'travail',
      'emploi',
      'religion',
      'dieu',
      'pri√®re',
    ];

    return offTopicKeywords.some((keyword) => lowerMessage.includes(keyword));
  }

  /**
   * G√©n√®re une r√©ponse de redirection pour les messages hors sujet
   */
  getOffTopicResponse(): ChatResponse {
    const responses = [
      "Je suis l√† pour t'aider avec l'√©cole et tes √©motions üíú Veux-tu qu'on parle de √ßa ?",
      "Je pr√©f√®re qu'on parle de toi et de ce qui se passe √† l'√©cole üå∏ Comment vas-tu ?",
      "Je suis sp√©cialis√© dans l'aide aux √©l√®ves üíï Raconte-moi ce qui te pr√©occupe !",
    ];

    return {
      content: responses[Math.floor(Math.random() * responses.length)],
    };
  }
}
